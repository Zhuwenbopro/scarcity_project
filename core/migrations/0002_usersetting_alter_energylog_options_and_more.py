# Generated by Django 5.0.1 on 2025-05-20 03:48

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="UserSetting",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
                (
                    "daily_work_hours",
                    models.FloatField(
                        default=8.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.1),
                            django.core.validators.MaxValueValidator(24.0),
                        ],
                        verbose_name="每日计划工作时长 (小时)",
                    ),
                ),
                (
                    "daily_energy_budget",
                    models.PositiveIntegerField(
                        default=10,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="每日能量预算 (点数)",
                    ),
                ),
                (
                    "daily_bandwidth_budget",
                    models.PositiveIntegerField(
                        default=10,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="每日带宽预算 (点数)",
                    ),
                ),
                (
                    "work_window_minutes",
                    models.PositiveIntegerField(
                        default=60,
                        validators=[django.core.validators.MinValueValidator(5)],
                        verbose_name="工作窗口时长 (分钟)",
                    ),
                ),
                (
                    "rest_window_minutes",
                    models.PositiveIntegerField(
                        default=5,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="休息窗口时长 (分钟)",
                    ),
                ),
                (
                    "last_modified",
                    models.DateTimeField(auto_now=True, verbose_name="最后修改时间"),
                ),
            ],
            options={
                "verbose_name": "用户偏好设置",
                "verbose_name_plural": "用户偏好设置",
            },
        ),
        migrations.AlterModelOptions(
            name="energylog",
            options={
                "ordering": ["user", "-timestamp"],
                "verbose_name": "精力日志",
                "verbose_name_plural": "精力日志",
            },
        ),
        migrations.AlterModelOptions(
            name="task",
            options={
                "ordering": ["user", "priority", "end_date", "name"],
                "verbose_name": "任务",
                "verbose_name_plural": "任务清单",
            },
        ),
        migrations.AlterModelOptions(
            name="worklog",
            options={
                "ordering": ["user", "-timestamp_start"],
                "verbose_name": "工作日志",
                "verbose_name_plural": "工作日志",
            },
        ),
        migrations.RenameField(
            model_name="worklog",
            old_name="tags",
            new_name="tags_snapshot",
        ),
        migrations.RemoveField(
            model_name="worklog",
            name="task_name",
        ),
        migrations.AddField(
            model_name="energylog",
            name="user",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="energy_logs",
                to=settings.AUTH_USER_MODEL,
                verbose_name="所属用户",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="longtermgoal",
            name="user",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="long_term_goals",
                to=settings.AUTH_USER_MODEL,
                verbose_name="所属用户",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="shorttermgoal",
            name="user",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="short_term_goals",
                to=settings.AUTH_USER_MODEL,
                verbose_name="所属用户",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="task",
            name="user",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tasks",
                to=settings.AUTH_USER_MODEL,
                verbose_name="所属用户",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="worklog",
            name="task_name_snapshot",
            field=models.CharField(
                default=1,
                help_text="记录工作时的任务名称，即使原任务被修改或删除",
                max_length=255,
                verbose_name="任务名称 (快照)",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="worklog",
            name="task_ref",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="core.task",
                verbose_name="关联任务对象",
            ),
        ),
        migrations.AddField(
            model_name="worklog",
            name="user",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="work_logs",
                to=settings.AUTH_USER_MODEL,
                verbose_name="所属用户",
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="energylog",
            name="energy_level",
            field=models.CharField(
                blank=True,
                choices=[("高", "高"), ("中", "中"), ("低", "低"), ("", "未设置")],
                max_length=10,
                null=True,
                verbose_name="精力水平",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="long_term_goal_ref",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="direct_tasks",
                to="core.longtermgoal",
                verbose_name="关联的长期目标 (直接)",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="short_term_goal_ref",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="tasks_set",
                to="core.shorttermgoal",
                verbose_name="关联的短期目标",
            ),
        ),
        migrations.CreateModel(
            name="FixedSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="日程名称")),
                ("start_time", models.TimeField(verbose_name="开始时间 (HH:MM)")),
                (
                    "duration_minutes",
                    models.PositiveIntegerField(verbose_name="时长 (分钟)"),
                ),
                (
                    "recurrence_type",
                    models.CharField(
                        choices=[
                            ("DAILY", "每日"),
                            ("WEEKLY", "每周"),
                            ("MONTHLY", "每月"),
                            ("WORKDAY", "工作日"),
                            ("WEEKEND", "休息日"),
                        ],
                        default="DAILY",
                        max_length=10,
                        verbose_name="重复类型",
                    ),
                ),
                (
                    "days_of_week",
                    models.CharField(
                        blank=True,
                        help_text="0=周一, ..., 6=周日。仅当类型为'每周'时有效。",
                        max_length=15,
                        null=True,
                        verbose_name="星期几 (0-6, 逗号分隔, 仅用于每周)",
                    ),
                ),
                (
                    "day_of_month",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="仅当类型为'每月'时有效。",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(31),
                        ],
                        verbose_name="几号 (1-31, 仅用于每月)",
                    ),
                ),
                (
                    "user_setting",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fixed_schedules",
                        to="core.usersetting",
                        verbose_name="所属用户设置",
                    ),
                ),
            ],
            options={
                "verbose_name": "固定日程",
                "verbose_name_plural": "固定日程",
            },
        ),
        migrations.CreateModel(
            name="BandwidthTagCost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag_name", models.CharField(max_length=100, verbose_name="标签名称")),
                ("cost", models.PositiveIntegerField(default=1, verbose_name="带宽成本")),
                (
                    "user_setting",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bandwidth_tag_costs",
                        to="core.usersetting",
                        verbose_name="所属用户设置",
                    ),
                ),
            ],
            options={
                "verbose_name": "标签带宽成本",
                "verbose_name_plural": "标签带宽成本",
                "unique_together": {("user_setting", "tag_name")},
            },
        ),
    ]
